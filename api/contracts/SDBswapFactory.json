{
  "contractName": "SDBswapFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapFactory.sol\":\"SDBswapFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapBEP20.sol\":{\"keccak256\":\"0x53b158c188bbb5fbe25b2217884cab28d1af3849895114e3b6f1435ac498c6d2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a2ce4f7bd237a7732778e4ea835dd3c0907f15c4f8d1ba112504709dcb6b59ee\",\"dweb:/ipfs/QmNxjXRP2fudfrZys6W4ESJ7SotdkwVq5koajipGcPDr5C\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapFactory.sol\":{\"keccak256\":\"0xf607cf99257301e85274a365a4a0cca60e5fdd71a32156f85351fe98fd27e211\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://56e9e13e42ea44e986e76c2968fbfa1a6a49ca6a9c86002afa2c155f47352fae\",\"dweb:/ipfs/Qmax3BvunjTJKDgXqxE9B1WfBan6zC54EeHqDYk2NfTcAP\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapPair.sol\":{\"keccak256\":\"0x9ee3ce18d57b259fe56d376a5450bc89aca72bc1feb3d20a29b8ebff639583aa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://37689ec303f2fbf935560024a206ada983a23c79774f5636e48e7894eed36260\",\"dweb:/ipfs/QmPuVSzxoxTLuvXNYbXEdgywBfbKvR2MtjUEhwt4jnnibR\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/interface/IBEP20SDBswap.sol\":{\"keccak256\":\"0xc2e58395b396b5b9ebd941e6642e9a2b4486176c65771e81b003a8cf0c40cb9f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d739de921860b7fd741eb64bea687b67152dad9e91f57aa0facb60983edb575a\",\"dweb:/ipfs/QmUW87DqcpTWYSgJEyCeHBtgcEjQv7VmqsrJbmuVASwSKf\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/interface/ISDBswapCallee.sol\":{\"keccak256\":\"0x170d8a180af554e10f7afba88bb7d54a673106e07fd5a8ac2cbf70525e905b4e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://466b7d7c4969863c83e05f813a4b2af2af6754c046301ed72db246b952336551\",\"dweb:/ipfs/QmXAXfm6bgV9MUkigPtbe2YDfgXcM46TVjrTmwDU3jVs6D\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/interface/ISDBswapFactory.sol\":{\"keccak256\":\"0x9fb9c5dfb9a6f036bc99480ddc0863509cf4c3ddbbadea2fbd635b5f5db1683f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://fa4825f77c825b67555bfb46db0164d7bca233f57ec5a6606f5efb2a2587cea5\",\"dweb:/ipfs/QmbjzuvJMNweB2fEmrDPVihzW1s4mtXTjS7NJf7XdH8hrL\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/library/SDBswapLibrary.sol\":{\"keccak256\":\"0x900049fcd8af4711ee628aa3d4d93819982de586dcb881ea4ca4b5935c86414d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://149ee0f94e5f1776da7e78f360b1743e82a2562cb1ba74db2afac9facc4bc6ae\",\"dweb:/ipfs/QmZXPhCGxWwAm5DXpqfUAp2FwVvUXQLKgAcUovcFePGeGo\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/library/SafeMath.sol\":{\"keccak256\":\"0xe7dbb956ecc45419b2e2e6e3fe9dde54d5db42327f8e216d9d382ceeae3b8859\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ea30736f450502045ce41395ce71b05a055a7a3955550c5ecc8c95a79130294e\",\"dweb:/ipfs/QmYKHrsuWNDa6AeTjkvEymBX6o6KXfjPLnsZxWYX4SmcvU\"]},\"/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/library/UQ112x112.sol\":{\"keccak256\":\"0x15516068a60c4eb7cc34dcb2b0dc6adc657b5e541adbb7db6e046c65f123681d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c862cb598101c731aef8b81e4a0a04b7f8fb1bef3e7a44943d68d786afd9a790\",\"dweb:/ipfs/QmRpV5AGVKeqeLV4Y2vrJXaKS2zKjdjD8GHfuuzn26rfaw\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051612dc1380380612dc183398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b612d30806100916000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af6146100f4578063c9c6539614610109578063e6a439051461011c578063f46901ed1461015057600080fd5b8063017e7e581461008d578063094b7415146100bd5780631e3dd18b146100d0578063574f2ba3146100e3575b600080fd5b6000546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100a0906001600160a01b031681565b6100a06100de36600461064c565b610163565b6003546040519081526020016100b4565b6101076101023660046105f9565b61018d565b005b6100a061011736600461061a565b61021b565b6100a061012a36600461061a565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61010761015e3660046105f9565b610547565b6003818154811061017357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820152601260248201527f534442737761703a20464f5242494444454e000000000000000000000000000060448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316141561027f5760405162461bcd60e51b815260206004820152601c60248201527f534442737761703a204944454e544943414c5f4144445245535345530000000060448201526064016101e3565b600080836001600160a01b0316856001600160a01b0316106102a25783856102a5565b84845b90925090506001600160a01b0382166103005760405162461bcd60e51b815260206004820152601560248201527f534442737761703a205a45524f5f41444452455353000000000000000000000060448201526064016101e3565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103755760405162461bcd60e51b815260206004820152601460248201527f534442737761703a20504149525f45584953545300000000000000000000000060448201526064016101e3565b600060405180602001610387906105d0565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc9550000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d1673ffffffffffffffffffffffffffffffffffffffff1998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b031633146105a15760405162461bcd60e51b815260206004820152601260248201527f534442737761703a20464f5242494444454e000000000000000000000000000060448201526064016101e3565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6126968061066583390190565b80356001600160a01b03811681146105f457600080fd5b919050565b60006020828403121561060a578081fd5b610613826105dd565b9392505050565b6000806040838503121561062c578081fd5b610635836105dd565b9150610643602084016105dd565b90509250929050565b60006020828403121561065d578081fd5b503591905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252601081526f29a22139bbb0b8102628102a37b5b2b760811b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fa565085f0deeec044ea232e6896de939137e021972f379bb5b5fcdfee7a10b93818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556125888061010e6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636a62784211610104578063ba9a7a56116100a2578063d49d518111610071578063d49d518114610485578063d505accf1461049c578063dd62ed3e146104af578063fff6cae9146104da57600080fd5b8063ba9a7a5614610443578063bc25cf771461044c578063c45a01551461045f578063d21220a71461047257600080fd5b80637ecebe00116100de5780637ecebe00146103ac57806389afcb44146103cc57806395d89b41146103f4578063a9059cbb1461043057600080fd5b80636a6278421461037057806370a08231146103835780637464fc3d146103a357600080fd5b806330adf81f11610171578063485cc9551161014b578063485cc955146103385780634e6ec2471461034b5780635909c0d51461035e5780635a3d54931461036757600080fd5b806330adf81f146102ee578063313ce567146103155780633644e5151461032f57600080fd5b8063095ea7b3116101ad578063095ea7b3146102765780630dfe16811461029957806318160ddd146102c457806323b872dd146102db57600080fd5b8063022c0d9f146101d457806306fdde03146101e95780630902f1ac1461023b575b600080fd5b6101e76101e23660046122a6565b6104e2565b005b6102256040518060400160405280601081526020017f53444273776170204c5020546f6b656e0000000000000000000000000000000081525081565b60405161023291906123a0565b60405180910390f35b600854604080516001600160701b038084168252600160701b8404166020820152600160e01b90920463ffffffff1690820152606001610232565b610289610284366004612243565b610aa4565b6040519015158152602001610232565b6006546102ac906001600160a01b031681565b6040516001600160a01b039091168152602001610232565b6102cd60005481565b604051908152602001610232565b6102896102e936600461218e565b610abb565b6102cd7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61031d601281565b60405160ff9091168152602001610232565b6102cd60035481565b6101e7610346366004612156565b610b5d565b6101e7610359366004612243565b610bfd565b6102cd60095481565b6102cd600a5481565b6102cd61037e36600461211e565b610c8c565b6102cd61039136600461211e565b60016020526000908152604090205481565b6102cd600b5481565b6102cd6103ba36600461211e565b60046020526000908152604090205481565b6103df6103da36600461211e565b610fb2565b60408051928352602083019190915201610232565b6102256040518060400160405280600381526020017f534442000000000000000000000000000000000000000000000000000000000081525081565b61028961043e366004612243565b61139b565b6102cd6103e881565b6101e761045a36600461211e565b6113a8565b6005546102ac906001600160a01b031681565b6007546102ac906001600160a01b031681565b6102cd6fffffffffffffffffffffffffffffffff81565b6101e76104aa3660046121ce565b6114ed565b6102cd6104bd366004612156565b600260209081526000928352604080842090915290825290205481565b6101e7611727565b600c5460011461052b5760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b60448201526064015b60405180910390fd5b6000600c558415158061053e5750600084115b6105b05760405162461bcd60e51b815260206004820152602360248201527f534442737761703a20494e53554646494349454e545f4f55545055545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610522565b6000806105e16008546001600160701b0380821692600160701b83049091169163ffffffff600160e01b9091041690565b5091509150816001600160701b0316871080156106065750806001600160701b031686105b6106525760405162461bcd60e51b815260206004820152601f60248201527f534442737761703a20494e53554646494349454e545f4c4951554944495459006044820152606401610522565b60065460075460009182916001600160a01b039182169190811690891682148015906106905750806001600160a01b0316896001600160a01b031614155b6106dc5760405162461bcd60e51b815260206004820152601360248201527f534442737761703a20494e56414c49445f544f000000000000000000000000006044820152606401610522565b8a156106ed576106ed828a8d61188b565b89156106fe576106fe818a8c61188b565b8615610784576040517f36db55c70000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906336db55c7906107519033908f908f908e908e90600401612353565b600060405180830381600087803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156107c357600080fd5b505afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb919061228e565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561083d57600080fd5b505afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610875919061228e565b92505050600089856001600160701b03166108909190612473565b831161089d5760006108ba565b6108b08a6001600160701b038716612473565b6108ba9084612473565b905060006108d18a6001600160701b038716612473565b83116108de5760006108fb565b6108f18a6001600160701b038716612473565b6108fb9084612473565b9050600082118061090c5750600081115b61097e5760405162461bcd60e51b815260206004820152602260248201527f534442737761703a20494e53554646494349454e545f494e5055545f414d4f5560448201527f4e540000000000000000000000000000000000000000000000000000000000006064820152608401610522565b60006109a061098e8460036119ef565b61099a876103e86119ef565b90611a91565b905060006109b261098e8460036119ef565b90506109d7620f42406109d16001600160701b038b8116908b166119ef565b906119ef565b6109e183836119ef565b1015610a2f5760405162461bcd60e51b815260206004820152600a60248201527f534442737761703a204b000000000000000000000000000000000000000000006044820152606401610522565b5050610a3d84848888611ad3565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610ab1338484611cf3565b5060015b92915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546fffffffffffffffffffffffffffffffff14610b48576001600160a01b0384166000908152600260209081526040808320338452909152902054610b239083611a91565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610b53848484611d55565b5060019392505050565b6005546001600160a01b03163314610bb75760405162461bcd60e51b815260206004820152601260248201527f534442737761703a20464f5242494444454e00000000000000000000000000006044820152606401610522565b600680546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b600054610c0a9082611dfb565b60009081556001600160a01b038316815260016020526040902054610c2f9082611dfb565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c809085815260200190565b60405180910390a35050565b6000600c54600114610cd25760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c819055600854600654604080516370a0823160e01b815230600482015290516001600160701b0380851695600160701b9095041693926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610d3b57600080fd5b505afa158015610d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d73919061228e565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610dbc57600080fd5b505afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df4919061228e565b90506000610e0b836001600160701b038716611a91565b90506000610e22836001600160701b038716611a91565b90506000610e308787611e5a565b60005490915080610e6757610e536103e861099a610e4e87876119ef565b611fa6565b9850610e6260006103e8610bfd565b610eae565b610eab6001600160701b038916610e7e86846119ef565b610e889190612411565b6001600160701b038916610e9c86856119ef565b610ea69190612411565b612016565b98505b60008911610f245760405162461bcd60e51b815260206004820152602660248201527f534442737761703a20494e53554646494349454e545f4c49515549444954595f60448201527f4d494e54454400000000000000000000000000000000000000000000000000006064820152608401610522565b610f2e8a8a610bfd565b610f3a86868a8a611ad3565b8115610f6457600854610f60906001600160701b0380821691600160701b9004166119ef565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610ff95760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c819055600854600654600754604080516370a0823160e01b815230600482015290516001600160701b0380861696600160701b90960416946001600160a01b0394851694909316929184916370a0823191602480820192602092909190829003018186803b15801561106e57600080fd5b505afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a6919061228e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b1580156110eb57600080fd5b505afa1580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611123919061228e565b306000908152600160205260408120549192506111408888611e5a565b6000549091508061115184876119ef565b61115b9190612411565b9a508061116884866119ef565b6111729190612411565b995060008b118015611184575060008a115b6111f65760405162461bcd60e51b815260206004820152602660248201527f534442737761703a20494e53554646494349454e545f4c49515549444954595f60448201527f4255524e454400000000000000000000000000000000000000000000000000006064820152608401610522565b611200308461202c565b61120b878d8d61188b565b611216868d8c61188b565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561125557600080fd5b505afa158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d919061228e565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b1580156112cf57600080fd5b505afa1580156112e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611307919061228e565b935061131585858b8b611ad3565b811561133f5760085461133b906001600160701b0380821691600160701b9004166119ef565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610ab1338484611d55565b600c546001146113ec5760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916114969184918691611491916001600160701b039091169084906370a08231906024015b60206040518083038186803b15801561145957600080fd5b505afa15801561146d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a919061228e565b61188b565b6008546040516370a0823160e01b81523060048201526114e3918391869161149191600160701b9091046001600160701b0316906001600160a01b038516906370a0823190602401611441565b50506001600c5550565b4284101561153d5760405162461bcd60e51b815260206004820152601060248201527f534442737761703a2045585049524544000000000000000000000000000000006044820152606401610522565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611590836124df565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016116249291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561168f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116c55750886001600160a01b0316816001600160a01b0316145b6117115760405162461bcd60e51b815260206004820152601a60248201527f534442737761703a20494e56414c49445f5349474e41545552450000000000006044820152606401610522565b61171c898989611cf3565b505050505050505050565b600c5460011461176b5760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c556006546040516370a0823160e01b8152306004820152611884916001600160a01b0316906370a082319060240160206040518083038186803b1580156117b557600080fd5b505afa1580156117c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ed919061228e565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561183057600080fd5b505afa158015611844573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611868919061228e565b6008546001600160701b0380821691600160701b900416611ad3565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b03167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916119309190612337565b6000604051808303816000865af19150503d806000811461196d576040519150601f19603f3d011682016040523d82523d6000602084013e611972565b606091505b509150915081801561199c57508051158061199c57508080602001905181019061199c919061226e565b6119e85760405162461bcd60e51b815260206004820152601860248201527f534442737761703a205452414e534645525f4641494c454400000000000000006044820152606401610522565b5050505050565b6000826119fe57506000610ab5565b6000611a0a8385612454565b905082611a178583612411565b14611a8a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610522565b9392505050565b6000611a8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120b6565b6fffffffffffffffffffffffffffffffff8411801590611b0357506fffffffffffffffffffffffffffffffff8311155b611b4f5760405162461bcd60e51b815260206004820152601160248201527f534442737761703a204f564552464c4f570000000000000000000000000000006044820152606401610522565b6000611b60640100000000426124fa565b600854909150600090611b8090600160e01b900463ffffffff168361248a565b905060008163ffffffff16118015611ba057506001600160701b03841615155b8015611bb457506001600160701b03831615155b15611c43578063ffffffff16611bdc85611bcd866120f0565b6001600160e01b031690612109565b6001600160e01b0316611bef9190612454565b60096000828254611c0091906123d3565b909155505063ffffffff8116611c1984611bcd876120f0565b6001600160e01b0316611c2c9190612454565b600a6000828254611c3d91906123d3565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260016020526040902054611d789082611a91565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611da79082611dfb565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611d489085815260200190565b600080611e0883856123d3565b905083811015611a8a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610522565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611eab57600080fd5b505afa158015611ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee3919061213a565b600b546001600160a01b038216158015945091925090611f92578015611f8d576000611f1e610e4e6001600160701b038881169088166119ef565b90506000611f2b83611fa6565b905080821115611f8a576000611f4d611f448484611a91565b600054906119ef565b90506000611f6683611f608660056119ef565b90611dfb565b90506000611f748284612411565b90508015611f8657611f868782610bfd565b5050505b50505b611f9e565b8015611f9e576000600b555b505092915050565b600060038211156120075750806000611fc0600283612411565b611fcb9060016123d3565b90505b8181101561200157905080600281611fe68186612411565b611ff091906123d3565b611ffa9190612411565b9050611fce565b50919050565b8115612011575060015b919050565b60008183106120255781611a8a565b5090919050565b6001600160a01b03821660009081526001602052604090205461204f9082611a91565b6001600160a01b038316600090815260016020526040812091909155546120769082611a91565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c80565b600081848411156120da5760405162461bcd60e51b815260040161052291906123a0565b5060006120e78486612473565b95945050505050565b6000610ab5600160701b6001600160701b038416612425565b6000611a8a6001600160701b038316846123eb565b60006020828403121561212f578081fd5b8135611a8a8161253a565b60006020828403121561214b578081fd5b8151611a8a8161253a565b60008060408385031215612168578081fd5b82356121738161253a565b915060208301356121838161253a565b809150509250929050565b6000806000606084860312156121a2578081fd5b83356121ad8161253a565b925060208401356121bd8161253a565b929592945050506040919091013590565b600080600080600080600060e0888a0312156121e8578283fd5b87356121f38161253a565b965060208801356122038161253a565b95506040880135945060608801359350608088013560ff81168114612226578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612255578182fd5b82356122608161253a565b946020939093013593505050565b60006020828403121561227f578081fd5b81518015158114611a8a578182fd5b60006020828403121561229f578081fd5b5051919050565b6000806000806000608086880312156122bd578081fd5b853594506020860135935060408601356122d68161253a565b9250606086013567ffffffffffffffff808211156122f2578283fd5b818801915088601f830112612305578283fd5b813581811115612313578384fd5b896020828501011115612324578384fd5b9699959850939650602001949392505050565b600082516123498184602087016124af565b9190910192915050565b6001600160a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60208152600082518060208401526123bf8160408501602087016124af565b601f01601f19169190910160400192915050565b600082198211156123e6576123e661250e565b500190565b60006001600160e01b038084168061240557612405612524565b92169190910492915050565b60008261242057612420612524565b500490565b60006001600160e01b038083168185168183048111821515161561244b5761244b61250e565b02949350505050565b600081600019048311821515161561246e5761246e61250e565b500290565b6000828210156124855761248561250e565b500390565b600063ffffffff838116908316818110156124a7576124a761250e565b039392505050565b60005b838110156124ca5781810151838201526020016124b2565b838111156124d9576000848401525b50505050565b60006000198214156124f3576124f361250e565b5060010190565b60008261250957612509612524565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461254f57600080fd5b5056fea2646970667358221220562d5e75454a772798eaf6b4a2b5dfbcaa01d9f1defda032e319691450b4b3c164736f6c63430008040033a26469706673582212202cf70697ca293baa9332fbeac0dcec77a2b9ce0d87812b561f6ec00890df3e5864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af6146100f4578063c9c6539614610109578063e6a439051461011c578063f46901ed1461015057600080fd5b8063017e7e581461008d578063094b7415146100bd5780631e3dd18b146100d0578063574f2ba3146100e3575b600080fd5b6000546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100a0906001600160a01b031681565b6100a06100de36600461064c565b610163565b6003546040519081526020016100b4565b6101076101023660046105f9565b61018d565b005b6100a061011736600461061a565b61021b565b6100a061012a36600461061a565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61010761015e3660046105f9565b610547565b6003818154811061017357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146101ec5760405162461bcd60e51b815260206004820152601260248201527f534442737761703a20464f5242494444454e000000000000000000000000000060448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316141561027f5760405162461bcd60e51b815260206004820152601c60248201527f534442737761703a204944454e544943414c5f4144445245535345530000000060448201526064016101e3565b600080836001600160a01b0316856001600160a01b0316106102a25783856102a5565b84845b90925090506001600160a01b0382166103005760405162461bcd60e51b815260206004820152601560248201527f534442737761703a205a45524f5f41444452455353000000000000000000000060448201526064016101e3565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103755760405162461bcd60e51b815260206004820152601460248201527f534442737761703a20504149525f45584953545300000000000000000000000060448201526064016101e3565b600060405180602001610387906105d0565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f56040517f485cc9550000000000000000000000000000000000000000000000000000000081526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561045257600080fd5b505af1158015610466573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d1673ffffffffffffffffffffffffffffffffffffffff1998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b031633146105a15760405162461bcd60e51b815260206004820152601260248201527f534442737761703a20464f5242494444454e000000000000000000000000000060448201526064016101e3565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6126968061066583390190565b80356001600160a01b03811681146105f457600080fd5b919050565b60006020828403121561060a578081fd5b610613826105dd565b9392505050565b6000806040838503121561062c578081fd5b610635836105dd565b9150610643602084016105dd565b90509250929050565b60006020828403121561065d578081fd5b503591905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252601081526f29a22139bbb0b8102628102a37b5b2b760811b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fa565085f0deeec044ea232e6896de939137e021972f379bb5b5fcdfee7a10b93818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556125888061010e6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636a62784211610104578063ba9a7a56116100a2578063d49d518111610071578063d49d518114610485578063d505accf1461049c578063dd62ed3e146104af578063fff6cae9146104da57600080fd5b8063ba9a7a5614610443578063bc25cf771461044c578063c45a01551461045f578063d21220a71461047257600080fd5b80637ecebe00116100de5780637ecebe00146103ac57806389afcb44146103cc57806395d89b41146103f4578063a9059cbb1461043057600080fd5b80636a6278421461037057806370a08231146103835780637464fc3d146103a357600080fd5b806330adf81f11610171578063485cc9551161014b578063485cc955146103385780634e6ec2471461034b5780635909c0d51461035e5780635a3d54931461036757600080fd5b806330adf81f146102ee578063313ce567146103155780633644e5151461032f57600080fd5b8063095ea7b3116101ad578063095ea7b3146102765780630dfe16811461029957806318160ddd146102c457806323b872dd146102db57600080fd5b8063022c0d9f146101d457806306fdde03146101e95780630902f1ac1461023b575b600080fd5b6101e76101e23660046122a6565b6104e2565b005b6102256040518060400160405280601081526020017f53444273776170204c5020546f6b656e0000000000000000000000000000000081525081565b60405161023291906123a0565b60405180910390f35b600854604080516001600160701b038084168252600160701b8404166020820152600160e01b90920463ffffffff1690820152606001610232565b610289610284366004612243565b610aa4565b6040519015158152602001610232565b6006546102ac906001600160a01b031681565b6040516001600160a01b039091168152602001610232565b6102cd60005481565b604051908152602001610232565b6102896102e936600461218e565b610abb565b6102cd7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b61031d601281565b60405160ff9091168152602001610232565b6102cd60035481565b6101e7610346366004612156565b610b5d565b6101e7610359366004612243565b610bfd565b6102cd60095481565b6102cd600a5481565b6102cd61037e36600461211e565b610c8c565b6102cd61039136600461211e565b60016020526000908152604090205481565b6102cd600b5481565b6102cd6103ba36600461211e565b60046020526000908152604090205481565b6103df6103da36600461211e565b610fb2565b60408051928352602083019190915201610232565b6102256040518060400160405280600381526020017f534442000000000000000000000000000000000000000000000000000000000081525081565b61028961043e366004612243565b61139b565b6102cd6103e881565b6101e761045a36600461211e565b6113a8565b6005546102ac906001600160a01b031681565b6007546102ac906001600160a01b031681565b6102cd6fffffffffffffffffffffffffffffffff81565b6101e76104aa3660046121ce565b6114ed565b6102cd6104bd366004612156565b600260209081526000928352604080842090915290825290205481565b6101e7611727565b600c5460011461052b5760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b60448201526064015b60405180910390fd5b6000600c558415158061053e5750600084115b6105b05760405162461bcd60e51b815260206004820152602360248201527f534442737761703a20494e53554646494349454e545f4f55545055545f414d4f60448201527f554e5400000000000000000000000000000000000000000000000000000000006064820152608401610522565b6000806105e16008546001600160701b0380821692600160701b83049091169163ffffffff600160e01b9091041690565b5091509150816001600160701b0316871080156106065750806001600160701b031686105b6106525760405162461bcd60e51b815260206004820152601f60248201527f534442737761703a20494e53554646494349454e545f4c4951554944495459006044820152606401610522565b60065460075460009182916001600160a01b039182169190811690891682148015906106905750806001600160a01b0316896001600160a01b031614155b6106dc5760405162461bcd60e51b815260206004820152601360248201527f534442737761703a20494e56414c49445f544f000000000000000000000000006044820152606401610522565b8a156106ed576106ed828a8d61188b565b89156106fe576106fe818a8c61188b565b8615610784576040517f36db55c70000000000000000000000000000000000000000000000000000000081526001600160a01b038a16906336db55c7906107519033908f908f908e908e90600401612353565b600060405180830381600087803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156107c357600080fd5b505afa1580156107d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fb919061228e565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561083d57600080fd5b505afa158015610851573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610875919061228e565b92505050600089856001600160701b03166108909190612473565b831161089d5760006108ba565b6108b08a6001600160701b038716612473565b6108ba9084612473565b905060006108d18a6001600160701b038716612473565b83116108de5760006108fb565b6108f18a6001600160701b038716612473565b6108fb9084612473565b9050600082118061090c5750600081115b61097e5760405162461bcd60e51b815260206004820152602260248201527f534442737761703a20494e53554646494349454e545f494e5055545f414d4f5560448201527f4e540000000000000000000000000000000000000000000000000000000000006064820152608401610522565b60006109a061098e8460036119ef565b61099a876103e86119ef565b90611a91565b905060006109b261098e8460036119ef565b90506109d7620f42406109d16001600160701b038b8116908b166119ef565b906119ef565b6109e183836119ef565b1015610a2f5760405162461bcd60e51b815260206004820152600a60248201527f534442737761703a204b000000000000000000000000000000000000000000006044820152606401610522565b5050610a3d84848888611ad3565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6000610ab1338484611cf3565b5060015b92915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546fffffffffffffffffffffffffffffffff14610b48576001600160a01b0384166000908152600260209081526040808320338452909152902054610b239083611a91565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610b53848484611d55565b5060019392505050565b6005546001600160a01b03163314610bb75760405162461bcd60e51b815260206004820152601260248201527f534442737761703a20464f5242494444454e00000000000000000000000000006044820152606401610522565b600680546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560078054929093169116179055565b600054610c0a9082611dfb565b60009081556001600160a01b038316815260016020526040902054610c2f9082611dfb565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610c809085815260200190565b60405180910390a35050565b6000600c54600114610cd25760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c819055600854600654604080516370a0823160e01b815230600482015290516001600160701b0380851695600160701b9095041693926001600160a01b0316916370a08231916024808301926020929190829003018186803b158015610d3b57600080fd5b505afa158015610d4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d73919061228e565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610dbc57600080fd5b505afa158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df4919061228e565b90506000610e0b836001600160701b038716611a91565b90506000610e22836001600160701b038716611a91565b90506000610e308787611e5a565b60005490915080610e6757610e536103e861099a610e4e87876119ef565b611fa6565b9850610e6260006103e8610bfd565b610eae565b610eab6001600160701b038916610e7e86846119ef565b610e889190612411565b6001600160701b038916610e9c86856119ef565b610ea69190612411565b612016565b98505b60008911610f245760405162461bcd60e51b815260206004820152602660248201527f534442737761703a20494e53554646494349454e545f4c49515549444954595f60448201527f4d494e54454400000000000000000000000000000000000000000000000000006064820152608401610522565b610f2e8a8a610bfd565b610f3a86868a8a611ad3565b8115610f6457600854610f60906001600160701b0380821691600160701b9004166119ef565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610ff95760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c819055600854600654600754604080516370a0823160e01b815230600482015290516001600160701b0380861696600160701b90960416946001600160a01b0394851694909316929184916370a0823191602480820192602092909190829003018186803b15801561106e57600080fd5b505afa158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a6919061228e565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b1580156110eb57600080fd5b505afa1580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611123919061228e565b306000908152600160205260408120549192506111408888611e5a565b6000549091508061115184876119ef565b61115b9190612411565b9a508061116884866119ef565b6111729190612411565b995060008b118015611184575060008a115b6111f65760405162461bcd60e51b815260206004820152602660248201527f534442737761703a20494e53554646494349454e545f4c49515549444954595f60448201527f4255524e454400000000000000000000000000000000000000000000000000006064820152608401610522565b611200308461202c565b61120b878d8d61188b565b611216868d8c61188b565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561125557600080fd5b505afa158015611269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128d919061228e565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b1580156112cf57600080fd5b505afa1580156112e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611307919061228e565b935061131585858b8b611ad3565b811561133f5760085461133b906001600160701b0380821691600160701b9004166119ef565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b6000610ab1338484611d55565b600c546001146113ec5760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916114969184918691611491916001600160701b039091169084906370a08231906024015b60206040518083038186803b15801561145957600080fd5b505afa15801561146d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a919061228e565b61188b565b6008546040516370a0823160e01b81523060048201526114e3918391869161149191600160701b9091046001600160701b0316906001600160a01b038516906370a0823190602401611441565b50506001600c5550565b4284101561153d5760405162461bcd60e51b815260206004820152601060248201527f534442737761703a2045585049524544000000000000000000000000000000006044820152606401610522565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b919087611590836124df565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016116249291907f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa15801561168f573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906116c55750886001600160a01b0316816001600160a01b0316145b6117115760405162461bcd60e51b815260206004820152601a60248201527f534442737761703a20494e56414c49445f5349474e41545552450000000000006044820152606401610522565b61171c898989611cf3565b505050505050505050565b600c5460011461176b5760405162461bcd60e51b815260206004820152600f60248201526e14d1109cddd85c0e881313d0d2d151608a1b6044820152606401610522565b6000600c556006546040516370a0823160e01b8152306004820152611884916001600160a01b0316906370a082319060240160206040518083038186803b1580156117b557600080fd5b505afa1580156117c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ed919061228e565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561183057600080fd5b505afa158015611844573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611868919061228e565b6008546001600160701b0380821691600160701b900416611ad3565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b03167fa9059cbb00000000000000000000000000000000000000000000000000000000179052915160009283928716916119309190612337565b6000604051808303816000865af19150503d806000811461196d576040519150601f19603f3d011682016040523d82523d6000602084013e611972565b606091505b509150915081801561199c57508051158061199c57508080602001905181019061199c919061226e565b6119e85760405162461bcd60e51b815260206004820152601860248201527f534442737761703a205452414e534645525f4641494c454400000000000000006044820152606401610522565b5050505050565b6000826119fe57506000610ab5565b6000611a0a8385612454565b905082611a178583612411565b14611a8a5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f77000000000000000000000000000000000000000000000000000000000000006064820152608401610522565b9392505050565b6000611a8a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506120b6565b6fffffffffffffffffffffffffffffffff8411801590611b0357506fffffffffffffffffffffffffffffffff8311155b611b4f5760405162461bcd60e51b815260206004820152601160248201527f534442737761703a204f564552464c4f570000000000000000000000000000006044820152606401610522565b6000611b60640100000000426124fa565b600854909150600090611b8090600160e01b900463ffffffff168361248a565b905060008163ffffffff16118015611ba057506001600160701b03841615155b8015611bb457506001600160701b03831615155b15611c43578063ffffffff16611bdc85611bcd866120f0565b6001600160e01b031690612109565b6001600160e01b0316611bef9190612454565b60096000828254611c0091906123d3565b909155505063ffffffff8116611c1984611bcd876120f0565b6001600160e01b0316611c2c9190612454565b600a6000828254611c3d91906123d3565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081027fffffffff000000000000000000000000000000000000000000000000000000009095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b038316600090815260016020526040902054611d789082611a91565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611da79082611dfb565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611d489085815260200190565b600080611e0883856123d3565b905083811015611a8a5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610522565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611eab57600080fd5b505afa158015611ebf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee3919061213a565b600b546001600160a01b038216158015945091925090611f92578015611f8d576000611f1e610e4e6001600160701b038881169088166119ef565b90506000611f2b83611fa6565b905080821115611f8a576000611f4d611f448484611a91565b600054906119ef565b90506000611f6683611f608660056119ef565b90611dfb565b90506000611f748284612411565b90508015611f8657611f868782610bfd565b5050505b50505b611f9e565b8015611f9e576000600b555b505092915050565b600060038211156120075750806000611fc0600283612411565b611fcb9060016123d3565b90505b8181101561200157905080600281611fe68186612411565b611ff091906123d3565b611ffa9190612411565b9050611fce565b50919050565b8115612011575060015b919050565b60008183106120255781611a8a565b5090919050565b6001600160a01b03821660009081526001602052604090205461204f9082611a91565b6001600160a01b038316600090815260016020526040812091909155546120769082611a91565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610c80565b600081848411156120da5760405162461bcd60e51b815260040161052291906123a0565b5060006120e78486612473565b95945050505050565b6000610ab5600160701b6001600160701b038416612425565b6000611a8a6001600160701b038316846123eb565b60006020828403121561212f578081fd5b8135611a8a8161253a565b60006020828403121561214b578081fd5b8151611a8a8161253a565b60008060408385031215612168578081fd5b82356121738161253a565b915060208301356121838161253a565b809150509250929050565b6000806000606084860312156121a2578081fd5b83356121ad8161253a565b925060208401356121bd8161253a565b929592945050506040919091013590565b600080600080600080600060e0888a0312156121e8578283fd5b87356121f38161253a565b965060208801356122038161253a565b95506040880135945060608801359350608088013560ff81168114612226578384fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612255578182fd5b82356122608161253a565b946020939093013593505050565b60006020828403121561227f578081fd5b81518015158114611a8a578182fd5b60006020828403121561229f578081fd5b5051919050565b6000806000806000608086880312156122bd578081fd5b853594506020860135935060408601356122d68161253a565b9250606086013567ffffffffffffffff808211156122f2578283fd5b818801915088601f830112612305578283fd5b813581811115612313578384fd5b896020828501011115612324578384fd5b9699959850939650602001949392505050565b600082516123498184602087016124af565b9190910192915050565b6001600160a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60208152600082518060208401526123bf8160408501602087016124af565b601f01601f19169190910160400192915050565b600082198211156123e6576123e661250e565b500190565b60006001600160e01b038084168061240557612405612524565b92169190910492915050565b60008261242057612420612524565b500490565b60006001600160e01b038083168185168183048111821515161561244b5761244b61250e565b02949350505050565b600081600019048311821515161561246e5761246e61250e565b500290565b6000828210156124855761248561250e565b500390565b600063ffffffff838116908316818110156124a7576124a761250e565b039392505050565b60005b838110156124ca5781810151838201526020016124b2565b838111156124d9576000848401525b50505050565b60006000198214156124f3576124f361250e565b5060010190565b60008261250957612509612524565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461254f57600080fd5b5056fea2646970667358221220562d5e75454a772798eaf6b4a2b5dfbcaa01d9f1defda032e319691450b4b3c164736f6c63430008040033a26469706673582212202cf70697ca293baa9332fbeac0dcec77a2b9ce0d87812b561f6ec00890df3e5864736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:326:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:229:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "150:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "158:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:58"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "176:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "195:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "189:5:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "189:16:58"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "180:5:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "268:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "277:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "285:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "270:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "270:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "270:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "227:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "238:5:58"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "253:3:58",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "258:1:58",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "249:3:58"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "249:11:58"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "262:1:58",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:3:58"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "245:19:58"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "234:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "234:31:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "224:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:42:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "217:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "217:50:58"
                  },
                  "nodeType": "YulIf",
                  "src": "214:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "303:15:58",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "313:5:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "303:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:58",
                "type": ""
              }
            ],
            "src": "14:310:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3671:58",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:58",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:58"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:58"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:58",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:58",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:58"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:58"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:58",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:58"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:58"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:58"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:58"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:58",
                "type": ""
              }
            ],
            "src": "14:196:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "285:126:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "348:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "306:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "315:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "302:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "302:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "298:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "298:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "295:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "366:39:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "395:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "376:18:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:29:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "366:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "251:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "262:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:58",
                "type": ""
              }
            ],
            "src": "215:196:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "503:183:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "549:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:58"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "566:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "551:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "551:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "551:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "524:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "533:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "520:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "545:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "516:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "516:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "513:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:39:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "594:18:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "594:29:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "632:48:58",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "665:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "676:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "661:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:18:58"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "642:18:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "642:38:58"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "632:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "461:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "472:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "484:6:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "492:6:58",
                "type": ""
              }
            ],
            "src": "416:270:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "761:120:58",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "807:26:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "816:6:58"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "824:6:58"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "809:6:58"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "809:22:58"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "809:22:58"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "782:7:58"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "791:9:58"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "778:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "778:23:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "803:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "774:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "774:32:58"
                  },
                  "nodeType": "YulIf",
                  "src": "771:2:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "842:33:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "865:9:58"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "852:12:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:23:58"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "842:6:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "727:9:58",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "738:7:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "750:6:58",
                "type": ""
              }
            ],
            "src": "691:190:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1033:186:58",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1043:41:58",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1057:26:58",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1053:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:31:58"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1047:2:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1100:3:58"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1113:2:58",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1117:6:58"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1109:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1109:15:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1126:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1105:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1105:24:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1093:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1093:37:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1093:37:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1150:3:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1155:2:58",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1146:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1146:12:58"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1168:2:58",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1172:6:58"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1164:3:58"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1164:15:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1181:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1160:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1160:24:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1139:46:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1139:46:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1194:19:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1205:3:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1210:2:58",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1201:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1201:12:58"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1194:3:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1001:3:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1006:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1014:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1025:3:58",
                "type": ""
              }
            ],
            "src": "886:333:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1325:125:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1335:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1347:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1358:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1343:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1343:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1335:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1377:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1392:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1400:42:58",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1388:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1388:55:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1370:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:74:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1370:74:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1294:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1305:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1316:4:58",
                "type": ""
              }
            ],
            "src": "1224:226:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1584:198:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1594:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1606:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1617:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1602:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1594:4:58"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1629:52:58",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1639:42:58",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1633:2:58",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1697:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1712:6:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1720:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1708:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1708:15:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1690:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1690:34:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1744:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1755:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1740:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1740:18:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1764:6:58"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1772:2:58"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1760:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1760:15:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1733:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:43:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1733:43:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1545:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1556:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1564:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1575:4:58",
                "type": ""
              }
            ],
            "src": "1455:327:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1916:168:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1926:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1938:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1949:2:58",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1934:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1934:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1926:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1968:9:58"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1983:6:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1991:42:58",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1979:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1979:55:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1961:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1961:74:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1961:74:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2055:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2066:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2051:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2051:18:58"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2071:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2044:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2044:34:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2044:34:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1877:9:58",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1888:6:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1896:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1907:4:58",
                "type": ""
              }
            ],
            "src": "1787:297:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2263:178:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2280:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2291:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2273:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2273:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2273:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2314:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2325:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2310:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2310:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2330:2:58",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2303:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2303:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2353:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2364:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2349:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2349:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2369:30:58",
                        "type": "",
                        "value": "SDBswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2342:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2342:58:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2342:58:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2409:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2421:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2432:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2417:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2417:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2409:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3a7e60c3c805399ba5c5158a904c9cae3eb72901a2a0ca8b5bd8bc0f6e383460__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2240:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2254:4:58",
                "type": ""
              }
            ],
            "src": "2089:352:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2620:170:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2637:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2648:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2630:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2630:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2671:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2682:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2667:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2667:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2687:2:58",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2660:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2660:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2660:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2706:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2706:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2726:22:58",
                        "type": "",
                        "value": "SDBswap: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2699:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:50:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:50:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2758:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2770:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2781:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2766:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2766:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2758:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b2071461bf0a88a5b4ecc9d201fe6f7b1d43a116c665515db0d4944b1140c81__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2597:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2611:4:58",
                "type": ""
              }
            ],
            "src": "2446:344:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2969:168:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2986:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2997:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2979:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2979:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2979:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3020:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3031:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3016:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3016:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3036:2:58",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3009:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3009:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3009:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3059:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3070:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3055:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3055:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3075:20:58",
                        "type": "",
                        "value": "SDBswap: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3048:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3048:48:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3048:48:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3105:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3117:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3128:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3113:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3113:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3105:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2946:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2960:4:58",
                "type": ""
              }
            ],
            "src": "2795:342:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3316:171:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3333:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3344:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3326:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3326:21:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3326:21:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3367:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3378:2:58",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3363:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3363:18:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3383:2:58",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3356:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3356:30:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3356:30:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3406:9:58"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3417:2:58",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3402:3:58"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:18:58"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3422:23:58",
                        "type": "",
                        "value": "SDBswap: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3395:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3395:51:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3395:51:58"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3455:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3467:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3478:2:58",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3463:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3463:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3455:4:58"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c51c38a6a37dec754691462db9ae9f715102c40c9ac915ca2986cc9e1c0c1967__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3293:9:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3307:4:58",
                "type": ""
              }
            ],
            "src": "3142:345:58"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3593:76:58",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3603:26:58",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3615:9:58"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3626:2:58",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3611:3:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3611:18:58"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3603:4:58"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3645:9:58"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3656:6:58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3638:6:58"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3638:25:58"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3638:25:58"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3562:9:58",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3573:6:58",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3584:4:58",
                "type": ""
              }
            ],
            "src": "3492:177:58"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_3a7e60c3c805399ba5c5158a904c9cae3eb72901a2a0ca8b5bd8bc0f6e383460__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"SDBswap: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b2071461bf0a88a5b4ecc9d201fe6f7b1d43a116c665515db0d4944b1140c81__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"SDBswap: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"SDBswap: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c51c38a6a37dec754691462db9ae9f715102c40c9ac915ca2986cc9e1c0c1967__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"SDBswap: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 58,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "184:1768:9:-:0;;;435:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;487:11;:26;;-1:-1:-1;;;;;;487:26:9;-1:-1:-1;;;;;487:26:9;;;;;;;;;;184:1768;;14:310:58;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:58;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:58:o;:::-;184:1768:9;;;;;;",
  "deployedSourceMap": "184:1768:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;234:29;;;;;-1:-1:-1;;;;;234:29:9;;;;;;-1:-1:-1;;;;;1388:55:58;;;1370:74;;1358:2;1343:18;234:29:9;;;;;;;;270:35;;;;;-1:-1:-1;;;;;270:35:9;;;392:34;;;;;;:::i;:::-;;:::i;529:105::-;611:8;:15;529:105;;3638:25:58;;;3626:2;3611:18;529:105:9;3593:76:58;1773:176:9;;;;;;:::i;:::-;;:::i;:::-;;642:963;;;;;;:::i;:::-;;:::i;314:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;314:71:9;;;1613:152;;;;;;:::i;:::-;;:::i;392:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;392:34:9;;-1:-1:-1;392:34:9;:::o;1773:176::-;1870:11;;-1:-1:-1;;;;;1870:11:9;1856:10;:25;1848:56;;;;-1:-1:-1;;;1848:56:9;;2997:2:58;1848:56:9;;;2979:21:58;3036:2;3016:18;;;3009:30;3075:20;3055:18;;;3048:48;3113:18;;1848:56:9;;;;;;;;;1915:11;:26;;-1:-1:-1;;1915:26:9;-1:-1:-1;;;;;1915:26:9;;;;;;;;;;1773:176::o;642:963::-;721:12;764:6;-1:-1:-1;;;;;754:16:9;:6;-1:-1:-1;;;;;754:16:9;;;746:57;;;;-1:-1:-1;;;746:57:9;;2291:2:58;746:57:9;;;2273:21:58;2330:2;2310:18;;;2303:30;2369;2349:18;;;2342:58;2417:18;;746:57:9;2263:178:58;746:57:9;815:14;831;858:6;-1:-1:-1;;;;;849:15:9;:6;-1:-1:-1;;;;;849:15:9;;:53;;887:6;895;849:53;;;868:6;876;849:53;814:88;;-1:-1:-1;814:88:9;-1:-1:-1;;;;;;921:20:9;;913:54;;;;-1:-1:-1;;;913:54:9;;3344:2:58;913:54:9;;;3326:21:58;3383:2;3363:18;;;3356:30;3422:23;3402:18;;;3395:51;3463:18;;913:54:9;3316:171:58;913:54:9;-1:-1:-1;;;;;986:15:9;;;1021:1;986:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;978:70;;;;-1:-1:-1;;;978:70:9;;2648:2:58;978:70:9;;;2630:21:58;2687:2;2667:18;;;2660:30;2726:22;2706:18;;;2699:50;2766:18;;978:70:9;2620:170:58;978:70:9;1089:21;1113:30;;;;;;;;:::i;:::-;-1:-1:-1;;1113:30:9;;;;;;;;;;;;;;;;-1:-1:-1;;1113:2:58;1109:15;;;1105:24;;1113:30:9;1181:32;;1093:37:58;1164:15;;;1160:24;1146:12;;;1139:46;1113:30:9;;-1:-1:-1;1156:12:9;;1201::58;;1181:32:9;;;;;;;;;;;;1171:43;;;;;;1156:58;;1304:4;1293:8;1287:15;1282:2;1272:8;1268:17;1265:1;1257:52;1330:44;;;;;-1:-1:-1;;;;;1708:15:58;;;1330:44:9;;;1690:34:58;1760:15;;;1740:18;;;1733:43;1249:60:9;;-1:-1:-1;1330:28:9;;;;;;1602:18:58;;1330:44:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1385:15:9;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;1385:30:9;;;;;;;;1426:15;;;;;;:23;;;;;;;;:30;;;;;;;;1512:8;:19;;-1:-1:-1;1512:19:9;;;;;;;;;;;;;;;;;;;;;;1581:15;;1547:50;;1961:74:58;;;2051:18;;;2044:34;1547:50:9;;1934:18:58;1547:50:9;;;;;;;642:963;;;;;;;;:::o;1613:152::-;1698:11;;-1:-1:-1;;;;;1698:11:9;1684:10;:25;1676:56;;;;-1:-1:-1;;;1676:56:9;;2997:2:58;1676:56:9;;;2979:21:58;3036:2;3016:18;;;3009:30;3075:20;3055:18;;;3048:48;3113:18;;1676:56:9;2969:168:58;1676:56:9;1743:5;:14;;-1:-1:-1;;1743:14:9;-1:-1:-1;;;;;1743:14:9;;;;;;;;;;1613:152::o;-1:-1:-1:-;;;;;;;;:::o;14:196:58:-;82:20;;-1:-1:-1;;;;;131:54:58;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:196::-;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;:::-;366:39;285:126;-1:-1:-1;;;285:126:58:o;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:190::-;750:6;803:2;791:9;782:7;778:23;774:32;771:2;;;824:6;816;809:22;771:2;-1:-1:-1;852:23:58;;761:120;-1:-1:-1;761:120:58:o",
  "source": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.4;\r\n\r\nimport './interface/ISDBswapFactory.sol';\r\nimport './SDBswapPair.sol';\r\nimport './library/SDBswapLibrary.sol';\r\n\r\n\r\n\r\ncontract SDBswapFactory is ISDBswapFactory {\r\n    address public override feeTo;\r\n    address public override feeToSetter;\r\n\r\n    mapping(address => mapping(address => address)) public override getPair;\r\n    address[] public override allPairs;\r\n\r\n    constructor(address _feeToSetter) public {\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n\r\n    function allPairsLength() external override view returns (uint) {\r\n        return allPairs.length;\r\n    }\r\n\r\n    function createPair(address tokenA, address tokenB) external override returns (address pair) {\r\n        require(tokenA != tokenB, 'SDBswap: IDENTICAL_ADDRESSES');\r\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\r\n        require(token0 != address(0), 'SDBswap: ZERO_ADDRESS');\r\n        require(getPair[token0][token1] == address(0), 'SDBswap: PAIR_EXISTS'); // single check is sufficient\r\n        bytes memory bytecode = type(SDBswapPair).creationCode;\r\n\r\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\r\n        assembly {\r\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\r\n        }\r\n        SDBswapPair(pair).initialize(token0, token1);\r\n        getPair[token0][token1] = pair;\r\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\r\n        allPairs.push(pair);\r\n        emit PairCreated(token0, token1, pair, allPairs.length);\r\n    }\r\n\r\n    function setFeeTo(address _feeTo) external override {\r\n        require(msg.sender == feeToSetter, 'SDBswap: FORBIDDEN');\r\n        feeTo = _feeTo;\r\n    }\r\n\r\n    function setFeeToSetter(address _feeToSetter) external override {\r\n        require(msg.sender == feeToSetter, 'SDBswap: FORBIDDEN');\r\n        feeToSetter = _feeToSetter;\r\n    }\r\n}",
  "sourcePath": "C:/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapFactory.sol",
  "ast": {
    "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapFactory.sol",
    "exportedSymbols": {
      "IBEP20BSCswap": [
        9719
      ],
      "ISDBswapCallee": [
        9746
      ],
      "ISDBswapFactory": [
        9809
      ],
      "SDBswapBEP20": [
        5876
      ],
      "SDBswapFactory": [
        6072
      ],
      "SDBswapLibrary": [
        11771
      ],
      "SDBswapPair": [
        7131
      ],
      "SafeMath": [
        12038
      ],
      "UQ112x112": [
        12242
      ]
    },
    "id": 6073,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5878,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:9"
      },
      {
        "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/interface/ISDBswapFactory.sol",
        "file": "./interface/ISDBswapFactory.sol",
        "id": 5879,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6073,
        "sourceUnit": 9810,
        "src": "66:41:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapPair.sol",
        "file": "./SDBswapPair.sol",
        "id": 5880,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6073,
        "sourceUnit": 7132,
        "src": "109:27:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/library/SDBswapLibrary.sol",
        "file": "./library/SDBswapLibrary.sol",
        "id": 5881,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6073,
        "sourceUnit": 11772,
        "src": "138:38:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5882,
              "name": "ISDBswapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9809,
              "src": "211:15:9"
            },
            "id": 5883,
            "nodeType": "InheritanceSpecifier",
            "src": "211:15:9"
          }
        ],
        "contractDependencies": [
          7131
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6072,
        "linearizedBaseContracts": [
          6072,
          9809
        ],
        "name": "SDBswapFactory",
        "nameLocation": "193:14:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              9763
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 5886,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "258:5:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5885,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "249:8:9"
            },
            "scope": 6072,
            "src": "234:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5884,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9768
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 5889,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "294:11:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "285:8:9"
            },
            "scope": 6072,
            "src": "270:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5887,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9777
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 5896,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "378:7:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5895,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "369:8:9"
            },
            "scope": 6072,
            "src": "314:71:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 5894,
              "keyType": {
                "id": 5890,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "314:47:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 5893,
                "keyType": {
                  "id": 5891,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "333:27:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 5892,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9784
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 5900,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "418:8:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5899,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "409:8:9"
            },
            "scope": 6072,
            "src": "392:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 5897,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "392:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5898,
              "nodeType": "ArrayTypeName",
              "src": "392:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5909,
              "nodeType": "Block",
              "src": "476:45:9",
              "statements": [
                {
                  "expression": {
                    "id": 5907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5905,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5889,
                      "src": "487:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5906,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5902,
                      "src": "501:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "487:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5908,
                  "nodeType": "ExpressionStatement",
                  "src": "487:26:9"
                }
              ]
            },
            "id": 5910,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5902,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "455:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "447:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:22:9"
            },
            "returnParameters": {
              "id": 5904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:9"
            },
            "scope": 6072,
            "src": "435:86:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9789
            ],
            "body": {
              "id": 5919,
              "nodeType": "Block",
              "src": "593:41:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5916,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5900,
                      "src": "611:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 5917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "611:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5915,
                  "id": 5918,
                  "nodeType": "Return",
                  "src": "604:22:9"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 5920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "538:14:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "564:8:9"
            },
            "parameters": {
              "id": 5911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "552:2:9"
            },
            "returnParameters": {
              "id": 5915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "587:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:6:9"
            },
            "scope": 6072,
            "src": "529:105:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9798
            ],
            "body": {
              "id": 6032,
              "nodeType": "Block",
              "src": "735:870:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5931,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5922,
                          "src": "754:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5932,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5924,
                          "src": "764:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "754:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a204944454e544943414c5f414444524553534553",
                        "id": 5934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a7e60c3c805399ba5c5158a904c9cae3eb72901a2a0ca8b5bd8bc0f6e383460",
                          "typeString": "literal_string \"SDBswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "SDBswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a7e60c3c805399ba5c5158a904c9cae3eb72901a2a0ca8b5bd8bc0f6e383460",
                          "typeString": "literal_string \"SDBswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 5930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "746:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5936,
                  "nodeType": "ExpressionStatement",
                  "src": "746:57:9"
                },
                {
                  "assignments": [
                    5938,
                    5940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5938,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "823:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "815:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "815:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5940,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "839:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "831:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5939,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "831:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5951,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5941,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5922,
                        "src": "849:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 5942,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5924,
                        "src": "858:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "849:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 5947,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5924,
                          "src": "887:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5948,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5922,
                          "src": "895:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 5949,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "886:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 5950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "849:53:9",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 5944,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5922,
                          "src": "868:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5945,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5924,
                          "src": "876:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 5946,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "867:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "814:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5953,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5938,
                          "src": "921:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "939:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "931:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5954,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "931:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "921:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a205a45524f5f41444452455353",
                        "id": 5959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c51c38a6a37dec754691462db9ae9f715102c40c9ac915ca2986cc9e1c0c1967",
                          "typeString": "literal_string \"SDBswap: ZERO_ADDRESS\""
                        },
                        "value": "SDBswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c51c38a6a37dec754691462db9ae9f715102c40c9ac915ca2986cc9e1c0c1967",
                          "typeString": "literal_string \"SDBswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 5952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "913:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "913:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5961,
                  "nodeType": "ExpressionStatement",
                  "src": "913:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 5963,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5896,
                              "src": "986:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 5965,
                            "indexExpression": {
                              "id": 5964,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5938,
                              "src": "994:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "986:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 5967,
                          "indexExpression": {
                            "id": 5966,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5940,
                            "src": "1002:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "986:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1021:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1013:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5968,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1013:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1013:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "986:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a20504149525f455849535453",
                        "id": 5973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1025:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b2071461bf0a88a5b4ecc9d201fe6f7b1d43a116c665515db0d4944b1140c81",
                          "typeString": "literal_string \"SDBswap: PAIR_EXISTS\""
                        },
                        "value": "SDBswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b2071461bf0a88a5b4ecc9d201fe6f7b1d43a116c665515db0d4944b1140c81",
                          "typeString": "literal_string \"SDBswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 5962,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "978:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:70:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5975,
                  "nodeType": "ExpressionStatement",
                  "src": "978:70:9"
                },
                {
                  "assignments": [
                    5977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5977,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1102:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "1089:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5976,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1089:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5982,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 5979,
                          "name": "SDBswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7131,
                          "src": "1118:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SDBswapPair_$7131_$",
                            "typeString": "type(contract SDBswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_SDBswapPair_$7131_$",
                            "typeString": "type(contract SDBswapPair)"
                          }
                        ],
                        "id": 5978,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1113:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1113:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_SDBswapPair_$7131",
                        "typeString": "type(contract SDBswapPair)"
                      }
                    },
                    "id": 5981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1113:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1089:54:9"
                },
                {
                  "assignments": [
                    5984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5984,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1164:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "1156:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5983,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1156:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5992,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5988,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5938,
                            "src": "1198:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5989,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5940,
                            "src": "1206:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5986,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1181:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1181:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1181:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5985,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1171:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1156:58:9"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1234:86:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1249:60:9",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1265:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:8:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1282:2:9",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1268:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1268:17:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1293:8:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1287:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1287:15:9"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1304:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1257:7:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1257:52:9"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1249:4:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 5977,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1272:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5977,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1293:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5928,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1249:4:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5984,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1304:4:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 5993,
                  "nodeType": "InlineAssembly",
                  "src": "1225:95:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5998,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "1359:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5999,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5940,
                        "src": "1367:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5995,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5928,
                            "src": "1342:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5994,
                          "name": "SDBswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7131,
                          "src": "1330:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SDBswapPair_$7131_$",
                            "typeString": "type(contract SDBswapPair)"
                          }
                        },
                        "id": 5996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1330:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SDBswapPair_$7131",
                          "typeString": "contract SDBswapPair"
                        }
                      },
                      "id": 5997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6279,
                      "src": "1330:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 6000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6001,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:44:9"
                },
                {
                  "expression": {
                    "id": 6008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6002,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5896,
                          "src": "1385:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6005,
                        "indexExpression": {
                          "id": 6003,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5938,
                          "src": "1393:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1385:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6006,
                      "indexExpression": {
                        "id": 6004,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5940,
                        "src": "1401:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1385:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6007,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5928,
                      "src": "1411:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1385:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6009,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:30:9"
                },
                {
                  "expression": {
                    "id": 6016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6010,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5896,
                          "src": "1426:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6013,
                        "indexExpression": {
                          "id": 6011,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5940,
                          "src": "1434:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1426:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6014,
                      "indexExpression": {
                        "id": 6012,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "1442:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1426:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6015,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5928,
                      "src": "1452:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1426:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6017,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6021,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5928,
                        "src": "1526:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6018,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5900,
                        "src": "1512:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1512:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 6022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6023,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:19:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6025,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "1559:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6026,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5940,
                        "src": "1567:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6027,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5928,
                        "src": "1575:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6028,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5900,
                          "src": "1581:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1581:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6024,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9758,
                      "src": "1547:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 6030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1547:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6031,
                  "nodeType": "EmitStatement",
                  "src": "1542:55:9"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 6033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "651:10:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5926,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "703:8:9"
            },
            "parameters": {
              "id": 5925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5922,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "670:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "662:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5924,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "686:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "678:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:32:9"
            },
            "returnParameters": {
              "id": 5929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5928,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "729:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "721:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:14:9"
            },
            "scope": 6072,
            "src": "642:963:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9803
            ],
            "body": {
              "id": 6051,
              "nodeType": "Block",
              "src": "1665:100:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6040,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1684:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1684:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6042,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5889,
                          "src": "1698:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1684:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a20464f5242494444454e",
                        "id": 6044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        },
                        "value": "SDBswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        }
                      ],
                      "id": 6039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1676:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6046,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:56:9"
                },
                {
                  "expression": {
                    "id": 6049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6047,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "1743:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6048,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6035,
                      "src": "1751:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6050,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:14:9"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 6052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1622:8:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1656:8:9"
            },
            "parameters": {
              "id": 6036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6035,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1639:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6052,
                  "src": "1631:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:16:9"
            },
            "returnParameters": {
              "id": 6038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:0:9"
            },
            "scope": 6072,
            "src": "1613:152:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9808
            ],
            "body": {
              "id": 6070,
              "nodeType": "Block",
              "src": "1837:112:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6059,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1856:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1856:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6061,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5889,
                          "src": "1870:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1856:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a20464f5242494444454e",
                        "id": 6063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1883:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        },
                        "value": "SDBswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        }
                      ],
                      "id": 6058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1848:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6065,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:56:9"
                },
                {
                  "expression": {
                    "id": 6068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6066,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5889,
                      "src": "1915:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6067,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6054,
                      "src": "1929:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1915:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6069,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:26:9"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 6071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1782:14:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6056,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1828:8:9"
            },
            "parameters": {
              "id": 6055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6054,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1805:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6071,
                  "src": "1797:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:22:9"
            },
            "returnParameters": {
              "id": 6057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:9"
            },
            "scope": 6072,
            "src": "1773:176:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6073,
        "src": "184:1768:9",
        "usedErrors": []
      }
    ],
    "src": "39:1913:9"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapFactory.sol",
    "exportedSymbols": {
      "IBEP20BSCswap": [
        9719
      ],
      "ISDBswapCallee": [
        9746
      ],
      "ISDBswapFactory": [
        9809
      ],
      "SDBswapBEP20": [
        5876
      ],
      "SDBswapFactory": [
        6072
      ],
      "SDBswapLibrary": [
        11771
      ],
      "SDBswapPair": [
        7131
      ],
      "SafeMath": [
        12038
      ],
      "UQ112x112": [
        12242
      ]
    },
    "id": 6073,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5878,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:9"
      },
      {
        "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/interface/ISDBswapFactory.sol",
        "file": "./interface/ISDBswapFactory.sol",
        "id": 5879,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6073,
        "sourceUnit": 9810,
        "src": "66:41:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/SDBswapPair.sol",
        "file": "./SDBswapPair.sol",
        "id": 5880,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6073,
        "sourceUnit": 7132,
        "src": "109:27:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/kolam/Desktop/safeSDB/safedepositbox-smartcontracts/contracts/library/SDBswapLibrary.sol",
        "file": "./library/SDBswapLibrary.sol",
        "id": 5881,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6073,
        "sourceUnit": 11772,
        "src": "138:38:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5882,
              "name": "ISDBswapFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9809,
              "src": "211:15:9"
            },
            "id": 5883,
            "nodeType": "InheritanceSpecifier",
            "src": "211:15:9"
          }
        ],
        "contractDependencies": [
          7131
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 6072,
        "linearizedBaseContracts": [
          6072,
          9809
        ],
        "name": "SDBswapFactory",
        "nameLocation": "193:14:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              9763
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 5886,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "258:5:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5885,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "249:8:9"
            },
            "scope": 6072,
            "src": "234:29:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5884,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9768
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 5889,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "294:11:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "285:8:9"
            },
            "scope": 6072,
            "src": "270:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5887,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9777
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 5896,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "378:7:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5895,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "369:8:9"
            },
            "scope": 6072,
            "src": "314:71:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 5894,
              "keyType": {
                "id": 5890,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "322:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "314:47:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 5893,
                "keyType": {
                  "id": 5891,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "341:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "333:27:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 5892,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "352:7:9",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9784
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 5900,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "418:8:9",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 5899,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "409:8:9"
            },
            "scope": 6072,
            "src": "392:34:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 5897,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "392:7:9",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5898,
              "nodeType": "ArrayTypeName",
              "src": "392:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 5909,
              "nodeType": "Block",
              "src": "476:45:9",
              "statements": [
                {
                  "expression": {
                    "id": 5907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5905,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5889,
                      "src": "487:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 5906,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5902,
                      "src": "501:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "487:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5908,
                  "nodeType": "ExpressionStatement",
                  "src": "487:26:9"
                }
              ]
            },
            "id": 5910,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5902,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "455:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 5910,
                  "src": "447:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "446:22:9"
            },
            "returnParameters": {
              "id": 5904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:9"
            },
            "scope": 6072,
            "src": "435:86:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              9789
            ],
            "body": {
              "id": 5919,
              "nodeType": "Block",
              "src": "593:41:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5916,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5900,
                      "src": "611:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 5917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "611:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5915,
                  "id": 5918,
                  "nodeType": "Return",
                  "src": "604:22:9"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 5920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "538:14:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "564:8:9"
            },
            "parameters": {
              "id": 5911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "552:2:9"
            },
            "returnParameters": {
              "id": 5915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5920,
                  "src": "587:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5913,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "586:6:9"
            },
            "scope": 6072,
            "src": "529:105:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9798
            ],
            "body": {
              "id": 6032,
              "nodeType": "Block",
              "src": "735:870:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5931,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5922,
                          "src": "754:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 5932,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5924,
                          "src": "764:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "754:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a204944454e544943414c5f414444524553534553",
                        "id": 5934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a7e60c3c805399ba5c5158a904c9cae3eb72901a2a0ca8b5bd8bc0f6e383460",
                          "typeString": "literal_string \"SDBswap: IDENTICAL_ADDRESSES\""
                        },
                        "value": "SDBswap: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a7e60c3c805399ba5c5158a904c9cae3eb72901a2a0ca8b5bd8bc0f6e383460",
                          "typeString": "literal_string \"SDBswap: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 5930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "746:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:57:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5936,
                  "nodeType": "ExpressionStatement",
                  "src": "746:57:9"
                },
                {
                  "assignments": [
                    5938,
                    5940
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5938,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "823:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "815:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "815:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 5940,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "839:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "831:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 5939,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "831:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5951,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 5943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5941,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5922,
                        "src": "849:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 5942,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5924,
                        "src": "858:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "849:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 5947,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5924,
                          "src": "887:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5948,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5922,
                          "src": "895:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 5949,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "886:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 5950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "849:53:9",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 5944,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5922,
                          "src": "868:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 5945,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5924,
                          "src": "876:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 5946,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "867:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "814:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5953,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5938,
                          "src": "921:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "939:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "931:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5954,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "931:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "931:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "921:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a205a45524f5f41444452455353",
                        "id": 5959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "943:23:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c51c38a6a37dec754691462db9ae9f715102c40c9ac915ca2986cc9e1c0c1967",
                          "typeString": "literal_string \"SDBswap: ZERO_ADDRESS\""
                        },
                        "value": "SDBswap: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c51c38a6a37dec754691462db9ae9f715102c40c9ac915ca2986cc9e1c0c1967",
                          "typeString": "literal_string \"SDBswap: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 5952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "913:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "913:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5961,
                  "nodeType": "ExpressionStatement",
                  "src": "913:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 5963,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5896,
                              "src": "986:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 5965,
                            "indexExpression": {
                              "id": 5964,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5938,
                              "src": "994:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "986:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 5967,
                          "indexExpression": {
                            "id": 5966,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5940,
                            "src": "1002:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "986:23:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1021:1:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1013:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5968,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1013:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1013:10:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "986:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a20504149525f455849535453",
                        "id": 5973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1025:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b2071461bf0a88a5b4ecc9d201fe6f7b1d43a116c665515db0d4944b1140c81",
                          "typeString": "literal_string \"SDBswap: PAIR_EXISTS\""
                        },
                        "value": "SDBswap: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b2071461bf0a88a5b4ecc9d201fe6f7b1d43a116c665515db0d4944b1140c81",
                          "typeString": "literal_string \"SDBswap: PAIR_EXISTS\""
                        }
                      ],
                      "id": 5962,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "978:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "978:70:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5975,
                  "nodeType": "ExpressionStatement",
                  "src": "978:70:9"
                },
                {
                  "assignments": [
                    5977
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5977,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1102:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "1089:21:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 5976,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1089:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5982,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 5979,
                          "name": "SDBswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7131,
                          "src": "1118:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SDBswapPair_$7131_$",
                            "typeString": "type(contract SDBswapPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_SDBswapPair_$7131_$",
                            "typeString": "type(contract SDBswapPair)"
                          }
                        ],
                        "id": 5978,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1113:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 5980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1113:17:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_SDBswapPair_$7131",
                        "typeString": "type(contract SDBswapPair)"
                      }
                    },
                    "id": 5981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1113:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1089:54:9"
                },
                {
                  "assignments": [
                    5984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5984,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1164:4:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 6032,
                      "src": "1156:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 5983,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1156:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5992,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5988,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5938,
                            "src": "1198:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 5989,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5940,
                            "src": "1206:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 5986,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1181:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 5987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1181:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 5990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1181:32:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5985,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1171:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 5991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1171:43:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1156:58:9"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1234:86:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1249:60:9",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1265:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:8:9"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1282:2:9",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1268:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1268:17:9"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1293:8:9"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1287:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1287:15:9"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1304:4:9"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1257:7:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1257:52:9"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1249:4:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 5977,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1272:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5977,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1293:8:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5928,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1249:4:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 5984,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1304:4:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 5993,
                  "nodeType": "InlineAssembly",
                  "src": "1225:95:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5998,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "1359:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5999,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5940,
                        "src": "1367:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5995,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5928,
                            "src": "1342:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5994,
                          "name": "SDBswapPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7131,
                          "src": "1330:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SDBswapPair_$7131_$",
                            "typeString": "type(contract SDBswapPair)"
                          }
                        },
                        "id": 5996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1330:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SDBswapPair_$7131",
                          "typeString": "contract SDBswapPair"
                        }
                      },
                      "id": 5997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6279,
                      "src": "1330:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 6000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1330:44:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6001,
                  "nodeType": "ExpressionStatement",
                  "src": "1330:44:9"
                },
                {
                  "expression": {
                    "id": 6008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6002,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5896,
                          "src": "1385:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6005,
                        "indexExpression": {
                          "id": 6003,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5938,
                          "src": "1393:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1385:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6006,
                      "indexExpression": {
                        "id": 6004,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5940,
                        "src": "1401:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1385:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6007,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5928,
                      "src": "1411:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1385:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6009,
                  "nodeType": "ExpressionStatement",
                  "src": "1385:30:9"
                },
                {
                  "expression": {
                    "id": 6016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 6010,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5896,
                          "src": "1426:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 6013,
                        "indexExpression": {
                          "id": 6011,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5940,
                          "src": "1434:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1426:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 6014,
                      "indexExpression": {
                        "id": 6012,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "1442:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1426:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6015,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5928,
                      "src": "1452:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1426:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6017,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6021,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5928,
                        "src": "1526:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6018,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5900,
                        "src": "1512:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 6020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1512:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 6022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1512:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6023,
                  "nodeType": "ExpressionStatement",
                  "src": "1512:19:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6025,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5938,
                        "src": "1559:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6026,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5940,
                        "src": "1567:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6027,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5928,
                        "src": "1575:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 6028,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5900,
                          "src": "1581:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 6029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1581:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6024,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9758,
                      "src": "1547:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 6030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1547:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6031,
                  "nodeType": "EmitStatement",
                  "src": "1542:55:9"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 6033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "651:10:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 5926,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "703:8:9"
            },
            "parameters": {
              "id": 5925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5922,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "670:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "662:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5924,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "686:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "678:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "661:32:9"
            },
            "returnParameters": {
              "id": 5929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5928,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "729:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6033,
                  "src": "721:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:14:9"
            },
            "scope": 6072,
            "src": "642:963:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9803
            ],
            "body": {
              "id": 6051,
              "nodeType": "Block",
              "src": "1665:100:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6040,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1684:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1684:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6042,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5889,
                          "src": "1698:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1684:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a20464f5242494444454e",
                        "id": 6044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1711:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        },
                        "value": "SDBswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        }
                      ],
                      "id": 6039,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1676:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1676:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6046,
                  "nodeType": "ExpressionStatement",
                  "src": "1676:56:9"
                },
                {
                  "expression": {
                    "id": 6049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6047,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5886,
                      "src": "1743:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6048,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6035,
                      "src": "1751:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1743:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6050,
                  "nodeType": "ExpressionStatement",
                  "src": "1743:14:9"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 6052,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1622:8:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1656:8:9"
            },
            "parameters": {
              "id": 6036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6035,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1639:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6052,
                  "src": "1631:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1630:16:9"
            },
            "returnParameters": {
              "id": 6038,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1665:0:9"
            },
            "scope": 6072,
            "src": "1613:152:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              9808
            ],
            "body": {
              "id": 6070,
              "nodeType": "Block",
              "src": "1837:112:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6059,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1856:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1856:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6061,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5889,
                          "src": "1870:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1856:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "534442737761703a20464f5242494444454e",
                        "id": 6063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1883:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        },
                        "value": "SDBswap: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bead5b77a5705bc035313d5fd891e38b7bca9a14c8936bd2460f39c37d201398",
                          "typeString": "literal_string \"SDBswap: FORBIDDEN\""
                        }
                      ],
                      "id": 6058,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1848:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:56:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6065,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:56:9"
                },
                {
                  "expression": {
                    "id": 6068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6066,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5889,
                      "src": "1915:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6067,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6054,
                      "src": "1929:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1915:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6069,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:26:9"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 6071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1782:14:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6056,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1828:8:9"
            },
            "parameters": {
              "id": 6055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6054,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1805:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 6071,
                  "src": "1797:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:22:9"
            },
            "returnParameters": {
              "id": 6057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:9"
            },
            "scope": 6072,
            "src": "1773:176:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 6073,
        "src": "184:1768:9",
        "usedErrors": []
      }
    ],
    "src": "39:1913:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-21T08:49:56.501Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}